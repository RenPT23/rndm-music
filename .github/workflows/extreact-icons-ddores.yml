name: PowerShell Setup and Script Workflow

on:
  push:
    branches:
      - main

jobs:
  setup-powershell-and-run-script:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install PowerShell
      uses: milliewalky/setup-pwsh@v1
      with:
        version: '7.2.0'  # Specify your desired PowerShell version here

    - name: Run PowerShell Script
      shell: pwsh
      run: |
        # Define the Add-Type code for ExtractIconExW in PowerShell
        $code = @'
        using System;
        using System.Runtime.InteropServices;

        public class Shell32_Extract {
          [DllImport(
            "ddores.dll",  # Assuming ddores.dll is in System32
            EntryPoint = "ExtractIconExW",
            CharSet = CharSet.Unicode,
            ExactSpelling = true,
            CallingConvention = CallingConvention.StdCall)
          ]
          public static extern int ExtractIconEx(
            string lpszFile, 
            int iconIndex, 
            out IntPtr phiconLarge, 
            out IntPtr phiconSmall, 
            int nIcons
          );
        }
        '@

        # Compile and load the Add-Type code
        Add-Type -TypeDefinition $code

        # Now call the ExtractIconExW function
        # Specify the path to the DLL in System32
        $dllPath = "C:\Windows\System32\ddores.dll"  # Path to ddores.dll in System32
        $iconIndex = 0  # Replace with the index of the icon you need
        $phiconLarge = [IntPtr]::Zero
        $phiconSmall = [IntPtr]::Zero
        $nIcons = 1  # Adjust based on how many icons you want to extract

        # Call the function to extract icons
        [Shell32_Extract]::ExtractIconEx($dllPath, $iconIndex, [ref]$phiconLarge, [ref]$phiconSmall, $nIcons)

        # Save the extracted icon to the repository folder (in the current working directory)
        $iconFilePath = "$PWD\icons\ddores\extracted_icon.ico"  # Path to save the icon in the repo folder
        
        # Placeholder logic for saving icon (need to handle IntPtr conversion)
        # This is a placeholder action as actual IntPtr to ICO conversion needs more steps
        [System.IO.File]::WriteAllBytes($iconFilePath, $phiconLarge)  # Placeholder - need actual IntPtr to image conversion logic

        Write-Host "Icon extraction complete. Saved to: $iconFilePath"
