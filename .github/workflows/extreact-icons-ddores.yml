name: Extract Icons from Ddores DLL

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  extract-icons:
    runs-on: windows-latest  # Use a Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install PowerShell
        uses: milliewalky/setup-pwsh@v1  # Corrected to use this action

      - name: Extract Icons from ddores.dll
        shell: pwsh
        run: |
          $code = @'
          using System;
          using System.Runtime.InteropServices;

          public class Shell32_Extract {

            [DllImport(
               "ddores.dll",  // Ensure this DLL is available in the environment
               EntryPoint        = "ExtractIconExW",
               CharSet           =  CharSet.Unicode,
               ExactSpelling     =  true,
               CallingConvention =  CallingConvention.StdCall)
            ]

             public static extern int ExtractIconEx(
                string lpszFile          , // Name of the .exe or .dll that contains the icon
                int    iconIndex         , // zero based index of first icon to extract. If iconIndex == 0 and and phiconSmall == null and phiconSmall = null, the number of icons is returned
                out    IntPtr phiconLarge,
                out    IntPtr phiconSmall,
                int    nIcons
            );

          }
          '@
          Add-Type -TypeDefinition $code

